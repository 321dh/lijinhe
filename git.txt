svn操作符简写
A：add，新增
C：conflict，冲突
D：delete，删除
M：modify，本地已经修改
G：modify and merGed，本地文件修改并且和服务器的进行合并
U：update，从服务器更新
R：replace，从服务器替换
I：ignored，忽略

git操作命令
1、设置姓名和Email
$ git config --global user.name "Jorly"
$ git config --global user.email "lijinhe@321dh.com"

2、设置行尾首选项
	1)Unix/Mac 用户：
		$ git config --global core.autocrlf input
		$ git config --global core.safecrlf true

	2)Windows 用户：
		$ git config --global core.autocrlf true
		$ git config --global core.safecrlf true

3、创建代码仓库
$ mkdir gitproject
$ cd gitproject
$ git init

这时git就把仓库建好了，而且告诉你是一个空的仓库（empty Git repository），细心的读者可以发现当前目录下多了一个.git的目录，可通过ls -ah查看。

4、添加文件并提交到git仓库
$ touch git.txt
$ vi git.txt
添加以下内容并用wq保存：
	Git is a version control system.
	Git is free software.
添加文件到仓库暂存区（如果不add添加，在提交时将不会被提交）	
$ git add git.txt
把文件提交到git仓库
$ git commit -m "添加一个git命令文件"

5、检查仓库的状态
$ git status

6、比较文件不同
$ git diff git.txt

7、查看log日志
$ git log
如果感觉输出信息太多，可用
$ git log --pretty=oneline

8、回到某个版本
$ git reset --hard HEAD^
1）HEAD 表示当前版本
2）HEAD^ 表示上个版本
3）HEAD^^ 表示上上个版本
4）HEAD~100 表示100个版本
5）回退到指定版本号 git reset --hard 版本号
如果回退之后还想恢复到最新版本，后添加最新版本号
$ git reset --hard b1f19dcf3e（版本号没必要写全，前几位就可以了，git会自动去找）

9、查看每次使用的命令
$ git reflog

10、丢弃工作区的修改
$ git checkout -- 文件名（没有--，就变成了“切换到另一个分支”的命令）

11、把暂存区的修改回退到工作区
$ git reset HEAD readme.txt

撤销修改小结
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

12、从版本库中删除文件
$ git rm test.txt
$ git commit -m "remove test.txt"
rm 只是把文件从本地删除，如果误删则用git checkout -- test.txt进行恢复。

13、创建SSH Key
$ ssh-keygen -t rsa -C "lijinhe@321dh.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/Jorly/.ssh/id_rsa):（确认密钥存储位置）
Created directory '/c/Users/Jorly/.ssh'.
Enter passphrase (empty for no passphrase):(输入密钥口令)
Enter same passphrase again:(确认输入密钥口令)
id_rsa是私钥（保密） id_rsa.pub是公钥（公开）

14、把本地仓库与远程仓库进行关联
$ git remote add origin https://github.com/321dh/lijinhe.git

15、把本地库内容推送到远程库上
$ git push -u origin master

16、
